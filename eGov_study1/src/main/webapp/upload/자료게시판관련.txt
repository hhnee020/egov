
▶ pom.xml


<dependency>
     <groupId>commons-fileupload</groupId>
     <artifactId>commons-fileupload</artifactId>
     <version>1.3.1</version> 
</dependency>

<dependency>
     <groupId>org.codehaus.jackson</groupId>
     <artifactId>jackson-mapper-asl</artifactId>
     <version>1.9.13</version>
</dependency>

--------------------------------------------------------------------

▶ dispatcher-servlet.xml


<bean id="spring.RegularCommonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     <property name="maxUploadSize" value="100000000" />
     <property name="maxInMemorySize" value="100000000" />
</bean>
<alias name="spring.RegularCommonsMultipartResolver" alias="multipartResolver"/>

--------------------------------------------------------------------



▶ DataBoardController.java


@Controller
public class DataBoardController  {

	
	@Resource(name = "multipartResolver")
	CommonsMultipartResolver multipartResolver;


       	 /*
	 *   자료실 게시판 저장 기능
	 */

	@RequestMapping(value = "/uploadFileSave.
	@ResponseBody public Map<String, String> multipartProcess(
						final MultipartHttpServletRequest multiRequest,
						HttpServletResponse response, 
						BoardVO vo,
						Model model) throws Exception {
		MultipartFile file;
		String filePath = "";
		int cnt = 0;

		Map<String, String> map = new HashMap<String, String>();
		Map<String, MultipartFile> files = multiRequest.getFileMap();

		String uploadPath = egovMessageSource.getMessage("file.upload.path");

		System.out.println("title : " + vo.getTitle());
		System.out.println("path : " + uploadPath);

		// 폴더의 존재 유무 및 생성

		File saveFolder = new File(uploadPath);
		if (!saveFolder.exists() || saveFolder.isFile()) {
			saveFolder.mkdirs();
		}

		Iterator<Entry<String, MultipartFile>> itr = files.entrySet().iterator();

		/*

		* MultipartFile 의 주요 메소드는
		* String getName()파라미터 이름을 구한다. 
		* String getOriginalFilename()업로드 한 파일의 실제!! 이름을 구한다.
		* boolean isEmpty()업로드 한 파일이 존재하지 않는 경우 true를 리턴 한다.
		* long getSize()업로드한 파일의 크기를 구한다.
		* byte[] getBytes() throws IOException업로드 한 파일 데이터를 구한다. --> 이걸로 파일 쓰면된다.
		* InputStream getInputStream()InputStrem을 구한다.
		* void transferTo(File dest)업로드 한 파일 데이터를 지정한 파일에 저장한다. --> 요고도 파일쓰는거다.
		*/

		while (itr.hasNext()) {
			Entry<String, MultipartFile> entry = itr.next();
			file = entry.getValue();
			if (!"".equals(file.getOriginalFilename())) {
				filePath = uploadPath + "\\" + file.getOriginalFilename();
				file.transferTo(new File(filePath));
				cnt++;
			}
		}
		System.out.println("filePath : " + filePath);

		map.put("cnt", Integer.toString(cnt));
		System.out.println("cnt -> " + cnt);
		return map;
	}


  	@RequestMapping(value = "/downloadFile.do")
	public void downloadFile(@RequestParam(value = "requestedFile") String requestedFile,
				HttpServletResponse response) throws Exception {
		String uploadPath = "c:/upload";
		File uFile = new File(uploadPath, requestedFile);
		int fSize = (int) uFile.length();

		if (fSize > 0) {
			BufferedInputStream in = new BufferedInputStream(new FileInputStream(uFile));
			// String mimetype = servletContext.getMimeType(requestedFile);
			String mimetype = "text/html";
			response.setBufferSize(fSize);
			response.setContentType(mimetype);
			response.setHeader("Content-Disposition", "attachment; filename=\"" + requestedFile + "\"");
			response.setContentLength(fSize);
			FileCopyUtils.copy(in, response.getOutputStream());
			in.close();
			response.getOutputStream().flush();
			response.getOutputStream().close();
		} else {
			//setContentType을 프로젝트 환경에 맞추어 변경
			response.setContentType("application/x-msdownload");
			PrintWriter printwriter = response.getWriter();
			printwriter.println("<html>");
			printwriter.println("<br><br><br><h2>Could not get file name:<br>"+ requestedFile + "</h2>");
			printwriter.println("<br><br><br><center><h3><a href='javascripｔ: history.go(-1)'>Back</a></h3></center>");
			printwriter.println("<br><br><br>© webAccess");
			printwriter.println("</html>");
			printwriter.flush();
			printwriter.close();
		}
	}

}

----------------------------------------------------------------------------------


